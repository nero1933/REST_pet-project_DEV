openapi: 3.0.3
info:
  title: E-Commence store
  version: 1.0.0
  description: desc
paths:
  /api/v1/addresses/:
    get:
      operationId: addresses_list
      tags:
      - addresses
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddress'
          description: ''
    post:
      operationId: addresses_create
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/addresses/{id}/:
    get:
      operationId: addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - addresses
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - addresses
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/countries/:
    get:
      operationId: countries_list
      tags:
      - countries
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/countries/{id}/:
    get:
      operationId: countries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/products/:
    get:
      operationId: products_list
      parameters:
      - in: query
        name: brand
        schema:
          type: integer
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - M
          - W
      - in: query
        name: product_item__color
        schema:
          type: integer
        description: Color
      - in: query
        name: product_item__product_item_size_quantity
        schema:
          type: integer
        description: pisq
      - in: query
        name: product_item__product_item_size_quantity__size
        schema:
          type: integer
        description: Size
      - in: query
        name: style
        schema:
          type: integer
      tags:
      - products
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/{slug}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/shopping_cart/:
    get:
      operationId: shopping_cart_list
      tags:
      - shopping_cart
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /api/v1/shopping_cart_items/:
    get:
      operationId: shopping_cart_items_list
      tags:
      - shopping_cart_items
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
    post:
      operationId: shopping_cart_items_create
      tags:
      - shopping_cart_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
  /api/v1/shopping_cart_items/{id}/:
    get:
      operationId: shopping_cart_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shopping_cart_items
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
    put:
      operationId: shopping_cart_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shopping_cart_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
    patch:
      operationId: shopping_cart_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shopping_cart_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartItem'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
    delete:
      operationId: shopping_cart_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shopping_cart_items
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        surname:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        unit_number:
          type: string
          nullable: true
          maxLength: 255
        country_id:
          type: integer
        region:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        post_code:
          type: integer
          maximum: 2147483647
          minimum: 0
        phone:
          type: string
          maxLength: 128
      required:
      - city
      - country_id
      - id
      - name
      - phone
      - post_code
      - region
      - street
      - surname
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
      required:
      - id
      - name
    GenderEnum:
      enum:
      - M
      - W
      type: string
    Image:
      type: object
      description: |-
        Serializes 'id', 'image_url' and 'description' fields from 'Image' model
        for displaying them in 'ProductItemSerializer' serializer.
      properties:
        id:
          type: integer
          readOnly: true
        image_url:
          type: string
          format: uri
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        main_image:
          type: boolean
      required:
      - id
      - image_url
    NameEnum:
      enum:
      - Afghanistan
      - Aland Islands
      - Albania
      - Algeria
      - American Samoa
      - Andorra
      - Angola
      - Anguilla
      - Antarctica
      - Antigua and Barbuda
      - Argentina
      - Armenia
      - Aruba
      - Australia
      - Austria
      - Azerbaijan
      - Bahamas
      - Bahrain
      - Bangladesh
      - Barbados
      - Belgium
      - Belize
      - Benin
      - Bermuda
      - Bhutan
      - Bolivia, Plurinational State of
      - Bonaire, Sint Eustatius and Saba
      - Bosnia and Herzegovina
      - Botswana
      - Bouvet Island
      - Brazil
      - British Indian Ocean Territory
      - Brunei Darussalam
      - Bulgaria
      - Burkina Faso
      - Burundi
      - Cambodia
      - Cameroon
      - Canada
      - Cape Verde
      - Cayman Islands
      - Central African Republic
      - Chad
      - Chile
      - China
      - Christmas Island
      - Cocos (Keeling) Islands
      - Colombia
      - Comoros
      - Congo
      - Congo, The Democratic Republic of the
      - Cook Islands
      - Costa Rica
      - Côte d'Ivoire
      - Croatia
      - Cuba
      - Curaçao
      - Cyprus
      - Czech Republic
      - Denmark
      - Djibouti
      - Dominica
      - Dominican Republic
      - Ecuador
      - Egypt
      - El Salvador
      - Equatorial Guinea
      - Eritrea
      - Estonia
      - Ethiopia
      - Falkland Islands (Malvinas)
      - Faroe Islands
      - Fiji
      - Finland
      - France
      - French Guiana
      - French Polynesia
      - French Southern Territories
      - Gabon
      - Gambia
      - Georgia
      - Germany
      - Ghana
      - Gibraltar
      - Greece
      - Greenland
      - Grenada
      - Guadeloupe
      - Guam
      - Guatemala
      - Guernsey
      - Guinea
      - Guinea-Bissau
      - Guyana
      - Haiti
      - Heard Island and McDonald Islands
      - Holy See (Vatican City State)
      - Honduras
      - Hong Kong
      - Hungary
      - Iceland
      - India
      - Indonesia
      - Iran, Islamic Republic of
      - Iraq
      - Ireland
      - Isle of Man
      - Israel
      - Italy
      - Jamaica
      - Japan
      - Jersey
      - Jordan
      - Kazakhstan
      - Kenya
      - Kiribati
      - Korea, Democratic People's Republic of
      - Korea, Republic of
      - Kuwait
      - Kyrgyzstan
      - Lao People's Democratic Republic
      - Latvia
      - Lebanon
      - Lesotho
      - Liberia
      - Libya
      - Liechtenstein
      - Lithuania
      - Luxembourg
      - Macao
      - Macedonia, Republic of
      - Madagascar
      - Malawi
      - Malaysia
      - Maldives
      - Mali
      - Malta
      - Marshall Islands
      - Martinique
      - Mauritania
      - Mauritius
      - Mayotte
      - Mexico
      - Micronesia, Federated States of
      - Moldova, Republic of
      - Monaco
      - Mongolia
      - Montenegro
      - Montserrat
      - Morocco
      - Mozambique
      - Myanmar
      - Namibia
      - Nauru
      - Nepal
      - Netherlands
      - New Caledonia
      - New Zealand
      - Nicaragua
      - Niger
      - Nigeria
      - Niue
      - Norfolk Island
      - Northern Mariana Islands
      - Norway
      - Oman
      - Pakistan
      - Palau
      - Palestinian Territory, Occupied
      - Panama
      - Papua New Guinea
      - Paraguay
      - Peru
      - Philippines
      - Pitcairn
      - Poland
      - Portugal
      - Puerto Rico
      - Qatar
      - Réunion
      - Romania
      - Rwanda
      - Saint Barthélemy
      - Saint Helena, Ascension and Tristan da Cunha
      - Saint Kitts and Nevis
      - Saint Lucia
      - Saint Martin (French part)
      - Saint Pierre and Miquelon
      - Saint Vincent and the Grenadines
      - Samoa
      - San Marino
      - Sao Tome and Principe
      - Saudi Arabia
      - Senegal
      - Serbia
      - Seychelles
      - Sierra Leone
      - Singapore
      - Sint Maarten (Dutch part)
      - Slovakia
      - Slovenia
      - Solomon Islands
      - Somalia
      - South Africa
      - South Georgia and the South Sandwich Islands
      - Spain
      - Sri Lanka
      - Sudan
      - Suriname
      - South Sudan
      - Svalbard and Jan Mayen
      - Swaziland
      - Sweden
      - Switzerland
      - Syrian Arab Republic
      - Taiwan, Province of China
      - Tajikistan
      - Tanzania, United Republic of
      - Thailand
      - Timor-Leste
      - Togo
      - Tokelau
      - Tonga
      - Trinidad and Tobago
      - Tunisia
      - Turkey
      - Turkmenistan
      - Turks and Caicos Islands
      - Tuvalu
      - Uganda
      - Ukraine
      - United Arab Emirates
      - United Kingdom
      - United States
      - United States Minor Outlying Islands
      - Uruguay
      - Uzbekistan
      - Vanuatu
      - Venezuela, Bolivarian Republic of
      - Viet Nam
      - Virgin Islands, British
      - Virgin Islands, U.S.
      - Wallis and Futuna
      - Yemen
      - Zambia
      - Zimbabwe
      type: string
    PatchedShoppingCartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
        cart_id:
          type: integer
          readOnly: true
        product_item_size_quantity:
          type: integer
    PatchedUserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        is_default:
          type: boolean
    Product:
      type: object
      description: |-
        Displays values from 'Product' model and particular form 'ProductItem' model.
        Values are show in 'ProductAPIList' view.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        product_item:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        brand:
          type: string
          readOnly: true
        category:
          type: string
          readOnly: true
        style:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - brand
      - category
      - created
      - gender
      - id
      - name
      - product_item
      - slug
      - style
    ProductItem:
      type: object
      description: |-
        Serializes several fields from 'ProductItem' model
        for displaying them in 'ProductSerializer' serializer.
      properties:
        id:
          type: integer
          readOnly: true
        SKU:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount_price:
          type: string
          readOnly: true
        color:
          type: string
          readOnly: true
        product_item_size_quantity:
          type: array
          items:
            $ref: '#/components/schemas/ProductItemSizeQuantity'
        product_item_image:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          readOnly: true
      required:
      - SKU
      - color
      - discount_price
      - id
      - price
      - product_item_image
      - product_item_size_quantity
    ProductItemSizeQuantity:
      type: object
      description: |-
        Serializes 'id', 'size' and 'quantity' fields from 'ProductItemSizeQuantity'
        model for displaying them in 'ProductItemSerializer' serializer.
      properties:
        id:
          type: integer
          readOnly: true
        size:
          allOf:
          - $ref: '#/components/schemas/SizeEnum'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - quantity
      - size
    ShoppingCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        shopping_cart:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartItem'
          readOnly: true
      required:
      - id
      - shopping_cart
      - user
    ShoppingCartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
        cart_id:
          type: integer
          readOnly: true
        product_item_size_quantity:
          type: integer
      required:
      - cart_id
      - id
      - product_item_size_quantity
      - quantity
    SizeEnum:
      enum:
      - XS
      - S
      - M
      - L
      - XL
      - XXL
      - '34.5'
      - '35'
      - '35.5'
      - '36'
      - '36.5'
      - '37'
      - '37.5'
      - '38'
      - '38.5'
      - '39'
      - '39.5'
      - '40'
      - '40.5'
      - '41'
      - '41.5'
      - '42'
      - '42.5'
      - '43'
      - '43.5'
      - '44'
      - '44.5'
      - '45'
      - '45.5'
      - '46'
      - '46.5'
      - '47'
      - '47.5'
      - '48'
      - '48.5'
      - '49'
      - '49.5'
      - '50'
      type: string
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        is_default:
          type: boolean
      required:
      - address
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
